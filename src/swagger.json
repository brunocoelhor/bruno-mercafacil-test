{
    "openapi": "3.0.0",
    "info": {
      "title": "API Desafio Back-end Mercafacil",
      "description": "Essa API faz parte do processo seletivo para a vaga de desenvolvedor  backend da empresa Mercafacil",
      "contact": {
        "email": "brunocoelho.r@gmail.com"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:3333/",
        "description": "API de teste"
      }
    ],
    "paths": {
        "/contacts": {
            "post": {
                "summary": "Create new contacts",
                "description": "This route is responsible for registering new contacts",
                "tags": ["Contact"],
                "security": [
                    {"bearerAuth":[]}
                  ],                
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                            "$ref": "#/components/schemas/Contact"
                            },
                            "examples": {
                                "contacts": {
                                    "value": {
                                        "contacts": [
                                            {
                                                "name": "Marina Rodrigues",
                                                "cellphone": "(55) 41 99694-1919"
                                            },
                                            {
                                                "name": "Nicolas Rodrigues",
                                                "cellphone": "5541954122723"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Name is required"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Searching all contacts",
                "description": "This route is responsible for searching all contacts",
                "tags": ["Contact"],
                "security": [
                    {"bearerAuth":[]}
                  ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Create new users",
                "description": "This route is responsible for registering new users",
                "tags": ["Users"],       
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                            "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "users": {
                                    "value": {
                                            "name":"NewUser",
                                            "username":"newuser",
                                            "password": "123456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "User already exists / All fields are required"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Contact": {
                "type": "object",
                "properties" : {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "cellphone": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties" : {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
    }
}    